https://medium.com/better-programming/object-oriented-programming-in-javascript-b3bda28d3e81

Here’s a list of concepts that are most often used when talking about object-oriented programming (OOP):

Object, property, and method
Class
      Class is not an object — it is the blueprint of an object. Classes are special functions.
      
      
Encapsulation

      Encapsulation means hiding information or data. 
      It refers to the ability of the object to execute its functionality 
      without revealing any execution details to the caller. 
      In other words, the private variable is only visible 
      to the current function and is not accessible to the global scope 
      or other functions.
     
      const Book = function(t, a) {
        let title = t; 
        let author = a; 
   
        return {
            summary : function() { 
              console.log(`${title} written by ${author}.`);
            } 
        }
      }
      
      const book1 = new Book('Hippie', 'Paulo Coelho');
      book1.summary();
      > Hippie written by Paulo Coelho.


Abstraction

    Abstraction means implementation hiding. 
    It is a way of hiding the implementation details 
    and only showing the essential features to the caller. 
    In other words, it hides irrelevant details 
    and shows only what’s necessary to the outer world. 
    A lack of abstraction will lead to problems 
    of code maintainability.

Reusability/inheritance

    Inheritance is when an object is based on another object.
    
Polymorphism
Association
Aggregation
Composition

    Composition is a special case of aggregation. 
    Composition is when an object contains another object 
    and the contained object can’t live without the container object.
